{"version":3,"file":"1-timer.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\n\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport '@fortawesome/fontawesome-free/css/all.min.css';\n\nlet userSelectedDate = null;\nlet idTimer = null;\nconst inputDate = document.querySelector('#datetime-picker');\nconst startButton = document.querySelector('[data-start]');\nconst stopButton = document.querySelector('[data-stop]');\nconst seconds = document.querySelector('[data-seconds]');\nconst minutes = document.querySelector('[data-minutes');\nconst hours = document.querySelector('[data-hours');\nconst days = document.querySelector('[data-days');\n\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  onClose(selectedDates) {\n    const userCurrentTime = Date.now();\n    if (!selectedDates.length) {\n      startButton.disabled = true;\n      startButton.style.cursor = 'not-allowed';\n      userSelectedDate = null;\n      return;\n    }\n    userSelectedDate = selectedDates[0].getTime();\n    if (userSelectedDate <= userCurrentTime) {\n      startButton.disabled = true;\n      startButton.style.cursor = 'not-allowed';\n      iziToast.error({\n        message: 'Please choose a date in the future',\n        backgroundColor: '#ff3b30',\n        messageColor: '#ffffff',\n        iconColor: '#ffffff',\n        icon: 'fa fa-times-circle',\n        position: 'topRight',\n        timeout: 4000,\n        close: false,\n        progressBarColor: '#ffffff',\n        onOpening: function (instance, toast) {\n          const icon = toast.querySelector('.iziToast-icon');\n          if (icon) {\n            icon.style.cursor = 'pointer';\n            icon.addEventListener('click', () => {\n              iziToast.hide({}, toast);\n            });\n          }\n        },\n      });\n    } else {\n      startButton.disabled = false;\n      startButton.style.cursor = 'pointer';\n    }\n  },\n};\nflatpickr('#datetime-picker', options);\n\nfunction convertMs(ms) {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n  return { days, hours, minutes, seconds };\n}\n\nstartButton.addEventListener('click', () => {\n  const timerUpdate = () => {\n    const remainingTime = userSelectedDate - Date.now();\n    const convertedTime = convertMs(remainingTime);\n    if (remainingTime > 0) {\n      seconds.textContent = convertedTime.seconds;\n      minutes.textContent = convertedTime.minutes;\n      hours.textContent = convertedTime.hours;\n      days.textContent = convertedTime.days;\n      startButton.disabled = true;\n      startButton.style.cursor = 'not-allowed';\n      inputDate.disabled = true;\n      inputDate.style.cursor = 'not-allowed';\n      addLeadingZero();\n    } else {\n      clearInterval(idTimer);\n      startButton.disabled = false;\n      startButton.style.cursor = 'pointer';\n      inputDate.disabled = false;\n      inputDate.style.cursor = 'pointer';\n    }\n  };\n\n  idTimer = setInterval(timerUpdate, 1000);\n});\n\nconst addLeadingZero = () => {\n  [seconds, minutes, hours, days].forEach(item => {\n    item.textContent = item.textContent.padStart(2, '0');\n  });\n};\n\nstopButton.addEventListener('click', () => {\n  clearInterval(idTimer);\n  idTimer = null;\n  [seconds, minutes, hours, days].forEach(item => {\n    item.textContent = '00';\n  });\n  startButton.disabled = false;\n  startButton.style.cursor = 'pointer';\n  inputDate.disabled = false;\n  inputDate.style.cursor = 'pointer';\n  userSelectedDate = null;\n});\n"],"names":["userSelectedDate","idTimer","inputDate","startButton","stopButton","seconds","minutes","hours","days","options","selectedDates","userCurrentTime","iziToast","instance","toast","icon","flatpickr","convertMs","ms","remainingTime","convertedTime","addLeadingZero","item"],"mappings":"+IAQA,IAAIA,EAAmB,KACnBC,EAAU,KACd,MAAMC,EAAY,SAAS,cAAc,kBAAkB,EACrDC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAa,SAAS,cAAc,aAAa,EACjDC,EAAU,SAAS,cAAc,gBAAgB,EACjDC,EAAU,SAAS,cAAc,eAAe,EAChDC,EAAQ,SAAS,cAAc,aAAa,EAC5CC,EAAO,SAAS,cAAc,YAAY,EAE1CC,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,QAAQC,EAAe,CACrB,MAAMC,EAAkB,KAAK,IAAG,EAChC,GAAI,CAACD,EAAc,OAAQ,CACzBP,EAAY,SAAW,GACvBA,EAAY,MAAM,OAAS,cAC3BH,EAAmB,KACnB,MACF,CACAA,EAAmBU,EAAc,CAAC,EAAE,QAAO,EACvCV,GAAoBW,GACtBR,EAAY,SAAW,GACvBA,EAAY,MAAM,OAAS,cAC3BS,EAAS,MAAM,CACb,QAAS,qCACT,gBAAiB,UACjB,aAAc,UACd,UAAW,UACX,KAAM,qBACN,SAAU,WACV,QAAS,IACT,MAAO,GACP,iBAAkB,UAClB,UAAW,SAAUC,EAAUC,EAAO,CACpC,MAAMC,EAAOD,EAAM,cAAc,gBAAgB,EAC7CC,IACFA,EAAK,MAAM,OAAS,UACpBA,EAAK,iBAAiB,QAAS,IAAM,CACnCH,EAAS,KAAK,CAAA,EAAIE,CAAK,CACzB,CAAC,EAEL,CACR,CAAO,IAEDX,EAAY,SAAW,GACvBA,EAAY,MAAM,OAAS,UAE/B,CACF,EACAa,EAAU,mBAAoBP,CAAO,EAErC,SAASQ,EAAUC,EAAI,CAKrB,MAAMV,EAAO,KAAK,MAAMU,EAAK,KAAG,EAC1BX,EAAQ,KAAK,MAAOW,EAAK,MAAO,IAAI,EACpCZ,EAAU,KAAK,MAAQY,EAAK,MAAO,KAAQ,GAAM,EACjDb,EAAU,KAAK,MAASa,EAAK,MAAO,KAAQ,IAAU,GAAM,EAElE,MAAO,CAAE,KAAAV,EAAM,MAAAD,EAAO,QAAAD,EAAS,QAAAD,CAAO,CACxC,CAEAF,EAAY,iBAAiB,QAAS,IAAM,CAuB1CF,EAAU,YAtBU,IAAM,CACxB,MAAMkB,EAAgBnB,EAAmB,KAAK,IAAG,EAC3CoB,EAAgBH,EAAUE,CAAa,EACzCA,EAAgB,GAClBd,EAAQ,YAAce,EAAc,QACpCd,EAAQ,YAAcc,EAAc,QACpCb,EAAM,YAAca,EAAc,MAClCZ,EAAK,YAAcY,EAAc,KACjCjB,EAAY,SAAW,GACvBA,EAAY,MAAM,OAAS,cAC3BD,EAAU,SAAW,GACrBA,EAAU,MAAM,OAAS,cACzBmB,EAAc,IAEd,cAAcpB,CAAO,EACrBE,EAAY,SAAW,GACvBA,EAAY,MAAM,OAAS,UAC3BD,EAAU,SAAW,GACrBA,EAAU,MAAM,OAAS,UAE7B,EAEmC,GAAI,CACzC,CAAC,EAED,MAAMmB,EAAiB,IAAM,CAC3B,CAAChB,EAASC,EAASC,EAAOC,CAAI,EAAE,QAAQc,GAAQ,CAC9CA,EAAK,YAAcA,EAAK,YAAY,SAAS,EAAG,GAAG,CACrD,CAAC,CACH,EAEAlB,EAAW,iBAAiB,QAAS,IAAM,CACzC,cAAcH,CAAO,EACrBA,EAAU,KACV,CAACI,EAASC,EAASC,EAAOC,CAAI,EAAE,QAAQc,GAAQ,CAC9CA,EAAK,YAAc,IACrB,CAAC,EACDnB,EAAY,SAAW,GACvBA,EAAY,MAAM,OAAS,UAC3BD,EAAU,SAAW,GACrBA,EAAU,MAAM,OAAS,UACzBF,EAAmB,IACrB,CAAC"}